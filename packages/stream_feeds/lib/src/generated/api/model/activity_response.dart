// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'activity_response.g.dart';
part 'activity_response.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum ActivityResponseVisibility {
  @JsonValue('private')
  private,
  @JsonValue('public')
  public,
  @JsonValue('tag')
  tag,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class ActivityResponse with _$ActivityResponse {
  const ActivityResponse({
    required this.attachments,
    required this.bookmarkCount,
    required this.commentCount,
    required this.comments,
    required this.createdAt,
    this.currentFeed,
    required this.custom,
    this.deletedAt,
    this.editedAt,
    this.expiresAt,
    required this.feeds,
    required this.filterTags,
    this.hidden,
    required this.id,
    required this.interestTags,
    required this.latestReactions,
    this.location,
    required this.mentionedUsers,
    this.moderation,
    this.notificationContext,
    required this.ownBookmarks,
    required this.ownReactions,
    this.parent,
    this.poll,
    required this.popularity,
    required this.reactionCount,
    required this.reactionGroups,
    required this.score,
    required this.searchData,
    required this.shareCount,
    this.text,
    required this.type,
    required this.updatedAt,
    required this.user,
    required this.visibility,
    this.visibilityTag,
  });

  @override
  final List<Attachment> attachments;

  @override
  final int bookmarkCount;

  @override
  final int commentCount;

  @override
  final List<CommentResponse> comments;

  @override
  @EpochDateTimeConverter()
  final DateTime createdAt;

  @override
  final FeedResponse? currentFeed;

  @override
  final Map<String, Object?> custom;

  @override
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  @override
  @EpochDateTimeConverter()
  final DateTime? editedAt;

  @override
  @EpochDateTimeConverter()
  final DateTime? expiresAt;

  @override
  final List<String> feeds;

  @override
  final List<String> filterTags;

  @override
  final bool? hidden;

  @override
  final String id;

  @override
  final List<String> interestTags;

  @override
  final List<FeedsReactionResponse> latestReactions;

  @override
  final ActivityLocation? location;

  @override
  final List<UserResponse> mentionedUsers;

  @override
  final ModerationV2Response? moderation;

  @override
  final Map<String, Object?>? notificationContext;

  @override
  final List<BookmarkResponse> ownBookmarks;

  @override
  final List<FeedsReactionResponse> ownReactions;

  @override
  final ActivityResponse? parent;

  @override
  final PollResponseData? poll;

  @override
  final int popularity;

  @override
  final int reactionCount;

  @override
  final Map<String, ReactionGroupResponse> reactionGroups;

  @override
  final double score;

  @override
  final Map<String, Object?> searchData;

  @override
  final int shareCount;

  @override
  final String? text;

  @override
  final String type;

  @override
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  @override
  final UserResponse user;

  @override
  @JsonKey(unknownEnumValue: ActivityResponseVisibility.unknown)
  final ActivityResponseVisibility visibility;

  @override
  final String? visibilityTag;

  Map<String, dynamic> toJson() => _$ActivityResponseToJson(this);

  static ActivityResponse fromJson(Map<String, dynamic> json) =>
      _$ActivityResponseFromJson(json);
}
