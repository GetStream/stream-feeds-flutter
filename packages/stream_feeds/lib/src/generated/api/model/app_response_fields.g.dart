// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class AppResponseFields {
  const AppResponseFields({
    required this.asyncUrlEnrichEnabled,
    required this.autoTranslationEnabled,
    required this.fileUploadConfig,
    required this.imageUploadConfig,
    required this.name,
  });

  final bool asyncUrlEnrichEnabled;

  final bool autoTranslationEnabled;

  final FileUploadConfig fileUploadConfig;

  final FileUploadConfig imageUploadConfig;

  final String name;

  Map<String, dynamic> toJson() {
    return {
      'async_url_enrich_enabled': asyncUrlEnrichEnabled,
      'auto_translation_enabled': autoTranslationEnabled,
      'file_upload_config': fileUploadConfig,
      'image_upload_config': imageUploadConfig,
      'name': name,
    };
  }

  static AppResponseFields? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return AppResponseFields(
        asyncUrlEnrichEnabled:
            mapValueOfType<bool>(json, r'async_url_enrich_enabled')!,
        autoTranslationEnabled:
            mapValueOfType<bool>(json, r'auto_translation_enabled')!,
        fileUploadConfig:
            FileUploadConfig.fromJson(json[r'file_upload_config'])!,
        imageUploadConfig:
            FileUploadConfig.fromJson(json[r'image_upload_config'])!,
        name: mapValueOfType<String>(json, r'name')!,
      );
    }
    return null;
  }

  static List<AppResponseFields> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <AppResponseFields>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = AppResponseFields.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'AppResponseFields('
        'asyncUrlEnrichEnabled: $asyncUrlEnrichEnabled, '
        'autoTranslationEnabled: $autoTranslationEnabled, '
        'fileUploadConfig: $fileUploadConfig, '
        'imageUploadConfig: $imageUploadConfig, '
        'name: $name, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is AppResponseFields &&
        other.asyncUrlEnrichEnabled == asyncUrlEnrichEnabled &&
        other.autoTranslationEnabled == autoTranslationEnabled &&
        other.fileUploadConfig == fileUploadConfig &&
        other.imageUploadConfig == imageUploadConfig &&
        other.name == name;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      asyncUrlEnrichEnabled,
      autoTranslationEnabled,
      fileUploadConfig,
      imageUploadConfig,
      name,
    ]);
  }
}
