// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

enum FollowResponsePushPreferenceEnum {
  all('all'),
  none('none'),
  unknown('_unknown');

  const FollowResponsePushPreferenceEnum(this.value);
  final String value;

  static FollowResponsePushPreferenceEnum? fromValue(String? json) {
    switch (json) {
      case null:
        return null;
      case 'all':
        return FollowResponsePushPreferenceEnum.all;
      case 'none':
        return FollowResponsePushPreferenceEnum.none;
      default:
        return FollowResponsePushPreferenceEnum.unknown;
    }
  }
}

enum FollowResponseStatusEnum {
  accepted('accepted'),
  pending('pending'),
  rejected('rejected'),
  unknown('_unknown');

  const FollowResponseStatusEnum(this.value);
  final String value;

  static FollowResponseStatusEnum? fromValue(String? json) {
    switch (json) {
      case null:
        return null;
      case 'accepted':
        return FollowResponseStatusEnum.accepted;
      case 'pending':
        return FollowResponseStatusEnum.pending;
      case 'rejected':
        return FollowResponseStatusEnum.rejected;
      default:
        return FollowResponseStatusEnum.unknown;
    }
  }
}

@immutable
class FollowResponse {
  const FollowResponse({
    required this.createdAt,
    this.custom,
    required this.followerRole,
    required this.pushPreference,
    this.requestAcceptedAt,
    this.requestRejectedAt,
    required this.sourceFeed,
    required this.status,
    required this.targetFeed,
    required this.updatedAt,
  });

  final DateTime createdAt;

  final Map<String, Object>? custom;

  final String followerRole;

  final FollowResponsePushPreferenceEnum pushPreference;

  final DateTime? requestAcceptedAt;

  final DateTime? requestRejectedAt;

  final FeedResponse sourceFeed;

  final FollowResponseStatusEnum status;

  final FeedResponse targetFeed;

  final DateTime updatedAt;

  Map<String, dynamic> toJson() {
    return {
      'created_at': createdAt,
      'custom': custom,
      'follower_role': followerRole,
      'push_preference': pushPreference,
      'request_accepted_at': requestAcceptedAt,
      'request_rejected_at': requestRejectedAt,
      'source_feed': sourceFeed,
      'status': status,
      'target_feed': targetFeed,
      'updated_at': updatedAt,
    };
  }

  static FollowResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return FollowResponse(
        createdAt: mapValueOfType<DateTime>(json, r'created_at')!,
        custom: mapCastOfType<String, Object>(json, r'custom'),
        followerRole: mapValueOfType<String>(json, r'follower_role')!,
        pushPreference: FollowResponsePushPreferenceEnum.fromValue(
            json['push_preference'])!,
        requestAcceptedAt:
            mapValueOfType<DateTime>(json, r'request_accepted_at', null),
        requestRejectedAt:
            mapValueOfType<DateTime>(json, r'request_rejected_at', null),
        sourceFeed: FeedResponse.fromJson(json[r'source_feed'])!,
        status: FollowResponseStatusEnum.fromValue(json['status'])!,
        targetFeed: FeedResponse.fromJson(json[r'target_feed'])!,
        updatedAt: mapValueOfType<DateTime>(json, r'updated_at')!,
      );
    }
    return null;
  }

  static List<FollowResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <FollowResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = FollowResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'FollowResponse('
        'createdAt: $createdAt, '
        'custom: $custom, '
        'followerRole: $followerRole, '
        'pushPreference: $pushPreference, '
        'requestAcceptedAt: $requestAcceptedAt, '
        'requestRejectedAt: $requestRejectedAt, '
        'sourceFeed: $sourceFeed, '
        'status: $status, '
        'targetFeed: $targetFeed, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is FollowResponse &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.followerRole == followerRole &&
        other.pushPreference == pushPreference &&
        other.requestAcceptedAt == requestAcceptedAt &&
        other.requestRejectedAt == requestRejectedAt &&
        other.sourceFeed == sourceFeed &&
        other.status == status &&
        other.targetFeed == targetFeed &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      createdAt,
      custom,
      followerRole,
      pushPreference,
      requestAcceptedAt,
      requestRejectedAt,
      sourceFeed,
      status,
      targetFeed,
      updatedAt,
    ]);
  }
}
