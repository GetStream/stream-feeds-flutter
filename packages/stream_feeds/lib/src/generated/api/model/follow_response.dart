// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'follow_response.g.dart';

@JsonEnum(alwaysCreate: true)
enum FollowResponsePushPreferenceEnum {
  @JsonValue('all')
  all,
  @JsonValue('none')
  none,
  unknown;
}

@JsonEnum(alwaysCreate: true)
enum FollowResponseStatusEnum {
  @JsonValue('accepted')
  accepted,
  @JsonValue('pending')
  pending,
  @JsonValue('rejected')
  rejected,
  unknown;
}

@immutable
@JsonSerializable()
class FollowResponse {
  const FollowResponse({
    required this.createdAt,
    this.custom,
    required this.followerRole,
    required this.pushPreference,
    this.requestAcceptedAt,
    this.requestRejectedAt,
    required this.sourceFeed,
    required this.status,
    required this.targetFeed,
    required this.updatedAt,
  });
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final Map<String, Object>? custom;

  final String followerRole;

  final FollowResponsePushPreferenceEnum pushPreference;
  @EpochDateTimeConverter()
  final DateTime? requestAcceptedAt;
  @EpochDateTimeConverter()
  final DateTime? requestRejectedAt;

  final FeedResponse sourceFeed;

  final FollowResponseStatusEnum status;

  final FeedResponse targetFeed;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  Map<String, dynamic> toJson() => _$FollowResponseToJson(this);

  static FollowResponse fromJson(Map<String, dynamic> json) =>
      _$FollowResponseFromJson(json);

  @override
  String toString() {
    return 'FollowResponse('
        'createdAt: $createdAt, '
        'custom: $custom, '
        'followerRole: $followerRole, '
        'pushPreference: $pushPreference, '
        'requestAcceptedAt: $requestAcceptedAt, '
        'requestRejectedAt: $requestRejectedAt, '
        'sourceFeed: $sourceFeed, '
        'status: $status, '
        'targetFeed: $targetFeed, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is FollowResponse &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.followerRole == followerRole &&
        other.pushPreference == pushPreference &&
        other.requestAcceptedAt == requestAcceptedAt &&
        other.requestRejectedAt == requestRejectedAt &&
        other.sourceFeed == sourceFeed &&
        other.status == status &&
        other.targetFeed == targetFeed &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      createdAt,
      custom,
      followerRole,
      pushPreference,
      requestAcceptedAt,
      requestRejectedAt,
      sourceFeed,
      status,
      targetFeed,
      updatedAt,
    ]);
  }
}
