// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'device.g.dart';
part 'device.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum DevicePushProvider {
  @JsonValue('apn')
  apn,
  @JsonValue('firebase')
  firebase,
  @JsonValue('huawei')
  huawei,
  @JsonValue('xiaomi')
  xiaomi,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class Device with _$Device {
  const Device({
    required this.createdAt,
    this.disabled,
    this.disabledReason,
    required this.id,
    required this.pushProvider,
    this.pushProviderName,
    required this.userId,
    this.voip,
  });

  @override
  @EpochDateTimeConverter()
  final DateTime createdAt;

  @override
  final bool? disabled;

  @override
  final String? disabledReason;

  @override
  final String id;

  @override
  @JsonKey(unknownEnumValue: DevicePushProvider.unknown)
  final DevicePushProvider pushProvider;

  @override
  final String? pushProviderName;

  @override
  final String userId;

  @override
  final bool? voip;

  Map<String, dynamic> toJson() => _$DeviceToJson(this);

  static Device fromJson(Map<String, dynamic> json) => _$DeviceFromJson(json);
}
