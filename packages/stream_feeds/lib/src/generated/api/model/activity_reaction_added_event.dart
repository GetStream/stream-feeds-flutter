// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'activity_reaction_added_event.g.dart';

@immutable
@JsonSerializable()
class ActivityReactionAddedEvent {
  const ActivityReactionAddedEvent({
    required this.activity,
    required this.createdAt,
    required this.custom,
    required this.fid,
    required this.reaction,
    this.receivedAt,
    required this.type,
    this.user,
  });

  final ActivityResponse activity;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final Map<String, Object> custom;

  final String fid;

  final FeedsReactionResponse reaction;
  @EpochDateTimeConverter()
  final DateTime? receivedAt;

  final String type;

  final UserResponseCommonFields? user;

  Map<String, dynamic> toJson() => _$ActivityReactionAddedEventToJson(this);

  static ActivityReactionAddedEvent fromJson(Map<String, dynamic> json) =>
      _$ActivityReactionAddedEventFromJson(json);

  @override
  String toString() {
    return 'ActivityReactionAddedEvent('
        'activity: $activity, '
        'createdAt: $createdAt, '
        'custom: $custom, '
        'fid: $fid, '
        'reaction: $reaction, '
        'receivedAt: $receivedAt, '
        'type: $type, '
        'user: $user, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ActivityReactionAddedEvent &&
        other.activity == activity &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.fid == fid &&
        other.reaction == reaction &&
        other.receivedAt == receivedAt &&
        other.type == type &&
        other.user == user;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      activity,
      createdAt,
      custom,
      fid,
      reaction,
      receivedAt,
      type,
      user,
    ]);
  }
}
