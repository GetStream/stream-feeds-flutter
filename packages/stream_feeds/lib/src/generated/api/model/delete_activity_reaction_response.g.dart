// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class DeleteActivityReactionResponse {
  const DeleteActivityReactionResponse({
    required this.activity,
    required this.duration,
    required this.reaction,
  });

  final ActivityResponse activity;

  final String duration;

  final FeedsReactionResponse reaction;

  Map<String, dynamic> toJson() {
    return {
      'activity': activity,
      'duration': duration,
      'reaction': reaction,
    };
  }

  static DeleteActivityReactionResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return DeleteActivityReactionResponse(
        activity: ActivityResponse.fromJson(json[r'activity'])!,
        duration: mapValueOfType<String>(json, r'duration')!,
        reaction: FeedsReactionResponse.fromJson(json[r'reaction'])!,
      );
    }
    return null;
  }

  static List<DeleteActivityReactionResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <DeleteActivityReactionResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = DeleteActivityReactionResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'DeleteActivityReactionResponse('
        'activity: $activity, '
        'duration: $duration, '
        'reaction: $reaction, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is DeleteActivityReactionResponse &&
        other.activity == activity &&
        other.duration == duration &&
        other.reaction == reaction;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      activity,
      duration,
      reaction,
    ]);
  }
}
