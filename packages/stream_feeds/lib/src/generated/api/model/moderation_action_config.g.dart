// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class ModerationActionConfig {
  const ModerationActionConfig({
    required this.action,
    required this.custom,
    required this.description,
    required this.entityType,
    required this.icon,
    required this.order,
  });

  final String action;

  final Map<String, Object> custom;

  final String description;

  final String entityType;

  final String icon;

  final int order;

  Map<String, dynamic> toJson() {
    return {
      'action': action,
      'custom': custom,
      'description': description,
      'entity_type': entityType,
      'icon': icon,
      'order': order,
    };
  }

  static ModerationActionConfig? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return ModerationActionConfig(
        action: mapValueOfType<String>(json, r'action')!,
        custom: mapCastOfType<String, Object>(json, r'custom')!,
        description: mapValueOfType<String>(json, r'description')!,
        entityType: mapValueOfType<String>(json, r'entity_type')!,
        icon: mapValueOfType<String>(json, r'icon')!,
        order: mapValueOfType<int>(json, r'order')!,
      );
    }
    return null;
  }

  static List<ModerationActionConfig> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <ModerationActionConfig>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = ModerationActionConfig.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'ModerationActionConfig('
        'action: $action, '
        'custom: $custom, '
        'description: $description, '
        'entityType: $entityType, '
        'icon: $icon, '
        'order: $order, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ModerationActionConfig &&
        other.action == action &&
        other.custom == custom &&
        other.description == description &&
        other.entityType == entityType &&
        other.icon == icon &&
        other.order == order;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      action,
      custom,
      description,
      entityType,
      icon,
      order,
    ]);
  }
}
