// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class GetOrCreateFeedResponse {
  const GetOrCreateFeedResponse({
    required this.activities,
    required this.aggregatedActivities,
    required this.created,
    required this.duration,
    required this.feed,
    required this.followers,
    this.followersPagination,
    required this.following,
    this.followingPagination,
    this.memberPagination,
    required this.members,
    this.next,
    this.notificationStatus,
    required this.ownCapabilities,
    this.ownFollows,
    this.ownMembership,
    required this.pinnedActivities,
    this.prev,
  });

  final List<ActivityResponse> activities;

  final List<AggregatedActivityResponse> aggregatedActivities;

  final bool created;

  final String duration;

  final FeedResponse feed;

  final List<FollowResponse> followers;

  final PagerResponse? followersPagination;

  final List<FollowResponse> following;

  final PagerResponse? followingPagination;

  final PagerResponse? memberPagination;

  final List<FeedMemberResponse> members;

  final String? next;

  final NotificationStatusResponse? notificationStatus;

  final List<FeedOwnCapability> ownCapabilities;

  final List<FollowResponse>? ownFollows;

  final FeedMemberResponse? ownMembership;

  final List<ActivityPinResponse> pinnedActivities;

  final String? prev;

  Map<String, dynamic> toJson() {
    return {
      'activities': activities,
      'aggregated_activities': aggregatedActivities,
      'created': created,
      'duration': duration,
      'feed': feed,
      'followers': followers,
      'followers_pagination': followersPagination,
      'following': following,
      'following_pagination': followingPagination,
      'member_pagination': memberPagination,
      'members': members,
      'next': next,
      'notification_status': notificationStatus,
      'own_capabilities': ownCapabilities,
      'own_follows': ownFollows,
      'own_membership': ownMembership,
      'pinned_activities': pinnedActivities,
      'prev': prev,
    };
  }

  static GetOrCreateFeedResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return GetOrCreateFeedResponse(
        activities: ActivityResponse.listFromJson(json[r'activities']),
        aggregatedActivities: AggregatedActivityResponse.listFromJson(
            json[r'aggregated_activities']),
        created: mapValueOfType<bool>(json, r'created')!,
        duration: mapValueOfType<String>(json, r'duration')!,
        feed: FeedResponse.fromJson(json[r'feed'])!,
        followers: FollowResponse.listFromJson(json[r'followers']),
        followersPagination:
            PagerResponse.fromJson(json[r'followers_pagination'] ?? null),
        following: FollowResponse.listFromJson(json[r'following']),
        followingPagination:
            PagerResponse.fromJson(json[r'following_pagination'] ?? null),
        memberPagination:
            PagerResponse.fromJson(json[r'member_pagination'] ?? null),
        members: FeedMemberResponse.listFromJson(json[r'members']),
        next: mapValueOfType<String>(json, r'next', null),
        notificationStatus: NotificationStatusResponse.fromJson(
            json[r'notification_status'] ?? null),
        ownCapabilities:
            FeedOwnCapability.listFromJson(json[r'own_capabilities']),
        ownFollows: FollowResponse.listFromJson(json[r'own_follows']),
        ownMembership:
            FeedMemberResponse.fromJson(json[r'own_membership'] ?? null),
        pinnedActivities:
            ActivityPinResponse.listFromJson(json[r'pinned_activities']),
        prev: mapValueOfType<String>(json, r'prev', null),
      );
    }
    return null;
  }

  static List<GetOrCreateFeedResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <GetOrCreateFeedResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = GetOrCreateFeedResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'GetOrCreateFeedResponse('
        'activities: $activities, '
        'aggregatedActivities: $aggregatedActivities, '
        'created: $created, '
        'duration: $duration, '
        'feed: $feed, '
        'followers: $followers, '
        'followersPagination: $followersPagination, '
        'following: $following, '
        'followingPagination: $followingPagination, '
        'memberPagination: $memberPagination, '
        'members: $members, '
        'next: $next, '
        'notificationStatus: $notificationStatus, '
        'ownCapabilities: $ownCapabilities, '
        'ownFollows: $ownFollows, '
        'ownMembership: $ownMembership, '
        'pinnedActivities: $pinnedActivities, '
        'prev: $prev, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is GetOrCreateFeedResponse &&
        other.activities == activities &&
        other.aggregatedActivities == aggregatedActivities &&
        other.created == created &&
        other.duration == duration &&
        other.feed == feed &&
        other.followers == followers &&
        other.followersPagination == followersPagination &&
        other.following == following &&
        other.followingPagination == followingPagination &&
        other.memberPagination == memberPagination &&
        other.members == members &&
        other.next == next &&
        other.notificationStatus == notificationStatus &&
        other.ownCapabilities == ownCapabilities &&
        other.ownFollows == ownFollows &&
        other.ownMembership == ownMembership &&
        other.pinnedActivities == pinnedActivities &&
        other.prev == prev;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      activities,
      aggregatedActivities,
      created,
      duration,
      feed,
      followers,
      followersPagination,
      following,
      followingPagination,
      memberPagination,
      members,
      next,
      notificationStatus,
      ownCapabilities,
      ownFollows,
      ownMembership,
      pinnedActivities,
      prev,
    ]);
  }
}
