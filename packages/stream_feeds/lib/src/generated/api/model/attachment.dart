// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'attachment.g.dart';

@immutable
@JsonSerializable()
class Attachment {
  const Attachment({
    this.actions,
    this.assetUrl,
    this.authorIcon,
    this.authorLink,
    this.authorName,
    this.color,
    required this.custom,
    this.fallback,
    this.fields,
    this.footer,
    this.footerIcon,
    this.giphy,
    this.imageUrl,
    this.ogScrapeUrl,
    this.originalHeight,
    this.originalWidth,
    this.pretext,
    this.text,
    this.thumbUrl,
    this.title,
    this.titleLink,
    this.type,
  });

  final List<Action>? actions;

  final String? assetUrl;

  final String? authorIcon;

  final String? authorLink;

  final String? authorName;

  final String? color;

  final Map<String, Object> custom;

  final String? fallback;

  final List<Field>? fields;

  final String? footer;

  final String? footerIcon;

  final Images? giphy;

  final String? imageUrl;

  final String? ogScrapeUrl;

  final int? originalHeight;

  final int? originalWidth;

  final String? pretext;

  final String? text;

  final String? thumbUrl;

  final String? title;

  final String? titleLink;

  final String? type;

  Map<String, dynamic> toJson() => _$AttachmentToJson(this);

  static Attachment fromJson(Map<String, dynamic> json) =>
      _$AttachmentFromJson(json);

  @override
  String toString() {
    return 'Attachment('
        'actions: $actions, '
        'assetUrl: $assetUrl, '
        'authorIcon: $authorIcon, '
        'authorLink: $authorLink, '
        'authorName: $authorName, '
        'color: $color, '
        'custom: $custom, '
        'fallback: $fallback, '
        'fields: $fields, '
        'footer: $footer, '
        'footerIcon: $footerIcon, '
        'giphy: $giphy, '
        'imageUrl: $imageUrl, '
        'ogScrapeUrl: $ogScrapeUrl, '
        'originalHeight: $originalHeight, '
        'originalWidth: $originalWidth, '
        'pretext: $pretext, '
        'text: $text, '
        'thumbUrl: $thumbUrl, '
        'title: $title, '
        'titleLink: $titleLink, '
        'type: $type, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Attachment &&
        other.actions == actions &&
        other.assetUrl == assetUrl &&
        other.authorIcon == authorIcon &&
        other.authorLink == authorLink &&
        other.authorName == authorName &&
        other.color == color &&
        other.custom == custom &&
        other.fallback == fallback &&
        other.fields == fields &&
        other.footer == footer &&
        other.footerIcon == footerIcon &&
        other.giphy == giphy &&
        other.imageUrl == imageUrl &&
        other.ogScrapeUrl == ogScrapeUrl &&
        other.originalHeight == originalHeight &&
        other.originalWidth == originalWidth &&
        other.pretext == pretext &&
        other.text == text &&
        other.thumbUrl == thumbUrl &&
        other.title == title &&
        other.titleLink == titleLink &&
        other.type == type;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      actions,
      assetUrl,
      authorIcon,
      authorLink,
      authorName,
      color,
      custom,
      fallback,
      fields,
      footer,
      footerIcon,
      giphy,
      imageUrl,
      ogScrapeUrl,
      originalHeight,
      originalWidth,
      pretext,
      text,
      thumbUrl,
      title,
      titleLink,
      type,
    ]);
  }
}
