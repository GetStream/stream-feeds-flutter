// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'shared_location.g.dart';

@immutable
@JsonSerializable()
class SharedLocation {
  const SharedLocation({
    this.channel,
    required this.channelCid,
    required this.createdAt,
    required this.createdByDeviceId,
    this.endAt,
    this.latitude,
    this.longitude,
    this.message,
    required this.messageId,
    required this.updatedAt,
    required this.userId,
  });

  final Channel? channel;

  final String channelCid;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final String createdByDeviceId;
  @EpochDateTimeConverter()
  final DateTime? endAt;

  final num? latitude;

  final num? longitude;

  final Message? message;

  final String messageId;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  final String userId;

  Map<String, dynamic> toJson() => _$SharedLocationToJson(this);

  static SharedLocation fromJson(Map<String, dynamic> json) =>
      _$SharedLocationFromJson(json);

  @override
  String toString() {
    return 'SharedLocation('
        'channel: $channel, '
        'channelCid: $channelCid, '
        'createdAt: $createdAt, '
        'createdByDeviceId: $createdByDeviceId, '
        'endAt: $endAt, '
        'latitude: $latitude, '
        'longitude: $longitude, '
        'message: $message, '
        'messageId: $messageId, '
        'updatedAt: $updatedAt, '
        'userId: $userId, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is SharedLocation &&
        other.channel == channel &&
        other.channelCid == channelCid &&
        other.createdAt == createdAt &&
        other.createdByDeviceId == createdByDeviceId &&
        other.endAt == endAt &&
        other.latitude == latitude &&
        other.longitude == longitude &&
        other.message == message &&
        other.messageId == messageId &&
        other.updatedAt == updatedAt &&
        other.userId == userId;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      channel,
      channelCid,
      createdAt,
      createdByDeviceId,
      endAt,
      latitude,
      longitude,
      message,
      messageId,
      updatedAt,
      userId,
    ]);
  }
}
