// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'message_response.g.dart';

@JsonEnum(alwaysCreate: true)
enum MessageResponseTypeEnum {
  @JsonValue('deleted')
  deleted,
  @JsonValue('ephemeral')
  ephemeral,
  @JsonValue('error')
  error,
  @JsonValue('regular')
  regular,
  @JsonValue('reply')
  reply,
  @JsonValue('system')
  system,
  unknown;
}

@immutable
@JsonSerializable()
class MessageResponse {
  const MessageResponse({
    required this.attachments,
    required this.cid,
    this.command,
    required this.createdAt,
    required this.custom,
    this.deletedAt,
    required this.deletedReplyCount,
    this.draft,
    required this.html,
    this.i18n,
    required this.id,
    this.imageLabels,
    required this.latestReactions,
    required this.mentionedUsers,
    this.messageTextUpdatedAt,
    this.mml,
    this.moderation,
    required this.ownReactions,
    this.parentId,
    this.pinExpires,
    required this.pinned,
    this.pinnedAt,
    this.pinnedBy,
    this.poll,
    this.pollId,
    this.quotedMessage,
    this.quotedMessageId,
    required this.reactionCounts,
    this.reactionGroups,
    required this.reactionScores,
    this.reminder,
    required this.replyCount,
    required this.restrictedVisibility,
    required this.shadowed,
    this.sharedLocation,
    this.showInChannel,
    required this.silent,
    required this.text,
    this.threadParticipants,
    required this.type,
    required this.updatedAt,
    required this.user,
  });

  final List<Attachment> attachments;

  final String cid;

  final String? command;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final Map<String, Object> custom;
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  final int deletedReplyCount;

  final DraftResponse? draft;

  final String html;

  final Map<String, String>? i18n;

  final String id;

  final Map<String, List<String>>? imageLabels;

  final List<ReactionResponse> latestReactions;

  final List<UserResponse> mentionedUsers;
  @EpochDateTimeConverter()
  final DateTime? messageTextUpdatedAt;

  final String? mml;

  final ModerationV2Response? moderation;

  final List<ReactionResponse> ownReactions;

  final String? parentId;
  @EpochDateTimeConverter()
  final DateTime? pinExpires;

  final bool pinned;
  @EpochDateTimeConverter()
  final DateTime? pinnedAt;

  final UserResponse? pinnedBy;

  final PollResponseData? poll;

  final String? pollId;

  final MessageResponse? quotedMessage;

  final String? quotedMessageId;

  final Map<String, int> reactionCounts;

  final Map<String, ReactionGroupResponse>? reactionGroups;

  final Map<String, int> reactionScores;

  final ReminderResponseData? reminder;

  final int replyCount;

  final List<String> restrictedVisibility;

  final bool shadowed;

  final SharedLocationResponseData? sharedLocation;

  final bool? showInChannel;

  final bool silent;

  final String text;

  final List<UserResponse>? threadParticipants;

  final MessageResponseTypeEnum type;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  final UserResponse user;

  Map<String, dynamic> toJson() => _$MessageResponseToJson(this);

  static MessageResponse fromJson(Map<String, dynamic> json) =>
      _$MessageResponseFromJson(json);

  @override
  String toString() {
    return 'MessageResponse('
        'attachments: $attachments, '
        'cid: $cid, '
        'command: $command, '
        'createdAt: $createdAt, '
        'custom: $custom, '
        'deletedAt: $deletedAt, '
        'deletedReplyCount: $deletedReplyCount, '
        'draft: $draft, '
        'html: $html, '
        'i18n: $i18n, '
        'id: $id, '
        'imageLabels: $imageLabels, '
        'latestReactions: $latestReactions, '
        'mentionedUsers: $mentionedUsers, '
        'messageTextUpdatedAt: $messageTextUpdatedAt, '
        'mml: $mml, '
        'moderation: $moderation, '
        'ownReactions: $ownReactions, '
        'parentId: $parentId, '
        'pinExpires: $pinExpires, '
        'pinned: $pinned, '
        'pinnedAt: $pinnedAt, '
        'pinnedBy: $pinnedBy, '
        'poll: $poll, '
        'pollId: $pollId, '
        'quotedMessage: $quotedMessage, '
        'quotedMessageId: $quotedMessageId, '
        'reactionCounts: $reactionCounts, '
        'reactionGroups: $reactionGroups, '
        'reactionScores: $reactionScores, '
        'reminder: $reminder, '
        'replyCount: $replyCount, '
        'restrictedVisibility: $restrictedVisibility, '
        'shadowed: $shadowed, '
        'sharedLocation: $sharedLocation, '
        'showInChannel: $showInChannel, '
        'silent: $silent, '
        'text: $text, '
        'threadParticipants: $threadParticipants, '
        'type: $type, '
        'updatedAt: $updatedAt, '
        'user: $user, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is MessageResponse &&
        other.attachments == attachments &&
        other.cid == cid &&
        other.command == command &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.deletedAt == deletedAt &&
        other.deletedReplyCount == deletedReplyCount &&
        other.draft == draft &&
        other.html == html &&
        other.i18n == i18n &&
        other.id == id &&
        other.imageLabels == imageLabels &&
        other.latestReactions == latestReactions &&
        other.mentionedUsers == mentionedUsers &&
        other.messageTextUpdatedAt == messageTextUpdatedAt &&
        other.mml == mml &&
        other.moderation == moderation &&
        other.ownReactions == ownReactions &&
        other.parentId == parentId &&
        other.pinExpires == pinExpires &&
        other.pinned == pinned &&
        other.pinnedAt == pinnedAt &&
        other.pinnedBy == pinnedBy &&
        other.poll == poll &&
        other.pollId == pollId &&
        other.quotedMessage == quotedMessage &&
        other.quotedMessageId == quotedMessageId &&
        other.reactionCounts == reactionCounts &&
        other.reactionGroups == reactionGroups &&
        other.reactionScores == reactionScores &&
        other.reminder == reminder &&
        other.replyCount == replyCount &&
        other.restrictedVisibility == restrictedVisibility &&
        other.shadowed == shadowed &&
        other.sharedLocation == sharedLocation &&
        other.showInChannel == showInChannel &&
        other.silent == silent &&
        other.text == text &&
        other.threadParticipants == threadParticipants &&
        other.type == type &&
        other.updatedAt == updatedAt &&
        other.user == user;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      attachments,
      cid,
      command,
      createdAt,
      custom,
      deletedAt,
      deletedReplyCount,
      draft,
      html,
      i18n,
      id,
      imageLabels,
      latestReactions,
      mentionedUsers,
      messageTextUpdatedAt,
      mml,
      moderation,
      ownReactions,
      parentId,
      pinExpires,
      pinned,
      pinnedAt,
      pinnedBy,
      poll,
      pollId,
      quotedMessage,
      quotedMessageId,
      reactionCounts,
      reactionGroups,
      reactionScores,
      reminder,
      replyCount,
      restrictedVisibility,
      shadowed,
      sharedLocation,
      showInChannel,
      silent,
      text,
      threadParticipants,
      type,
      updatedAt,
      user,
    ]);
  }
}
