// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class Images {
  const Images({
    required this.fixedHeight,
    required this.fixedHeightDownsampled,
    required this.fixedHeightStill,
    required this.fixedWidth,
    required this.fixedWidthDownsampled,
    required this.fixedWidthStill,
    required this.original,
  });

  final ImageData fixedHeight;

  final ImageData fixedHeightDownsampled;

  final ImageData fixedHeightStill;

  final ImageData fixedWidth;

  final ImageData fixedWidthDownsampled;

  final ImageData fixedWidthStill;

  final ImageData original;

  Map<String, dynamic> toJson() {
    return {
      'fixed_height': fixedHeight,
      'fixed_height_downsampled': fixedHeightDownsampled,
      'fixed_height_still': fixedHeightStill,
      'fixed_width': fixedWidth,
      'fixed_width_downsampled': fixedWidthDownsampled,
      'fixed_width_still': fixedWidthStill,
      'original': original,
    };
  }

  static Images? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return Images(
        fixedHeight: ImageData.fromJson(json[r'fixed_height'])!,
        fixedHeightDownsampled:
            ImageData.fromJson(json[r'fixed_height_downsampled'])!,
        fixedHeightStill: ImageData.fromJson(json[r'fixed_height_still'])!,
        fixedWidth: ImageData.fromJson(json[r'fixed_width'])!,
        fixedWidthDownsampled:
            ImageData.fromJson(json[r'fixed_width_downsampled'])!,
        fixedWidthStill: ImageData.fromJson(json[r'fixed_width_still'])!,
        original: ImageData.fromJson(json[r'original'])!,
      );
    }
    return null;
  }

  static List<Images> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <Images>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = Images.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'Images('
        'fixedHeight: $fixedHeight, '
        'fixedHeightDownsampled: $fixedHeightDownsampled, '
        'fixedHeightStill: $fixedHeightStill, '
        'fixedWidth: $fixedWidth, '
        'fixedWidthDownsampled: $fixedWidthDownsampled, '
        'fixedWidthStill: $fixedWidthStill, '
        'original: $original, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Images &&
        other.fixedHeight == fixedHeight &&
        other.fixedHeightDownsampled == fixedHeightDownsampled &&
        other.fixedHeightStill == fixedHeightStill &&
        other.fixedWidth == fixedWidth &&
        other.fixedWidthDownsampled == fixedWidthDownsampled &&
        other.fixedWidthStill == fixedWidthStill &&
        other.original == original;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      fixedHeight,
      fixedHeightDownsampled,
      fixedHeightStill,
      fixedWidth,
      fixedWidthDownsampled,
      fixedWidthStill,
      original,
    ]);
  }
}
