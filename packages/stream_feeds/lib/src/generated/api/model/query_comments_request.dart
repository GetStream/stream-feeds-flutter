// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'query_comments_request.g.dart';
part 'query_comments_request.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum QueryCommentsRequestSort {
  @JsonValue('best')
  best,
  @JsonValue('controversial')
  controversial,
  @JsonValue('first')
  first,
  @JsonValue('last')
  last,
  @JsonValue('top')
  top,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class QueryCommentsRequest with _$QueryCommentsRequest {
  const QueryCommentsRequest({
    required this.filter,
    this.limit,
    this.next,
    this.prev,
    this.sort,
  });

  @override
  final Map<String, Object?> filter;

  @override
  final int? limit;

  @override
  final String? next;

  @override
  final String? prev;

  @override
  @JsonKey(unknownEnumValue: QueryCommentsRequestSort.unknown)
  final QueryCommentsRequestSort? sort;

  Map<String, dynamic> toJson() => _$QueryCommentsRequestToJson(this);

  static QueryCommentsRequest fromJson(Map<String, dynamic> json) =>
      _$QueryCommentsRequestFromJson(json);
}
