// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class QueryReviewQueueResponse {
  const QueryReviewQueueResponse({
    required this.actionConfig,
    required this.duration,
    required this.items,
    this.next,
    this.prev,
    required this.stats,
  });

  final Map<String, List<ModerationActionConfig>> actionConfig;

  final String duration;

  final List<ReviewQueueItemResponse> items;

  final String? next;

  final String? prev;

  final Map<String, Object> stats;

  Map<String, dynamic> toJson() {
    return {
      'action_config': actionConfig,
      'duration': duration,
      'items': items,
      'next': next,
      'prev': prev,
      'stats': stats,
    };
  }

  static QueryReviewQueueResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return QueryReviewQueueResponse(
        actionConfig: mapCastOfType<String, List<ModerationActionConfig>>(
            json, r'action_config')!,
        duration: mapValueOfType<String>(json, r'duration')!,
        items: ReviewQueueItemResponse.listFromJson(json[r'items']),
        next: mapValueOfType<String>(json, r'next', null),
        prev: mapValueOfType<String>(json, r'prev', null),
        stats: mapCastOfType<String, Object>(json, r'stats')!,
      );
    }
    return null;
  }

  static List<QueryReviewQueueResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <QueryReviewQueueResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = QueryReviewQueueResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'QueryReviewQueueResponse('
        'actionConfig: $actionConfig, '
        'duration: $duration, '
        'items: $items, '
        'next: $next, '
        'prev: $prev, '
        'stats: $stats, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is QueryReviewQueueResponse &&
        other.actionConfig == actionConfig &&
        other.duration == duration &&
        other.items == items &&
        other.next == next &&
        other.prev == prev &&
        other.stats == stats;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      actionConfig,
      duration,
      items,
      next,
      prev,
      stats,
    ]);
  }
}
