// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'channel_member.g.dart';
part 'channel_member.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum ChannelMemberRole {
  @JsonValue('admin')
  admin,
  @JsonValue('member')
  member,
  @JsonValue('moderator')
  moderator,
  @JsonValue('owner')
  owner,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class ChannelMember with _$ChannelMember {
  const ChannelMember({
    this.archivedAt,
    this.banExpires,
    required this.banned,
    required this.channelRole,
    required this.createdAt,
    required this.custom,
    this.deletedAt,
    this.inviteAcceptedAt,
    this.inviteRejectedAt,
    this.invited,
    this.isModerator,
    required this.notificationsMuted,
    this.pinnedAt,
    this.role,
    required this.shadowBanned,
    this.status,
    required this.updatedAt,
    this.user,
    this.userId,
  });

  @override
  @EpochDateTimeConverter()
  final DateTime? archivedAt;

  @override
  @EpochDateTimeConverter()
  final DateTime? banExpires;

  @override
  final bool banned;

  @override
  final String channelRole;

  @override
  @EpochDateTimeConverter()
  final DateTime createdAt;

  @override
  final Map<String, Object> custom;

  @override
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  @override
  @EpochDateTimeConverter()
  final DateTime? inviteAcceptedAt;

  @override
  @EpochDateTimeConverter()
  final DateTime? inviteRejectedAt;

  @override
  final bool? invited;

  @override
  final bool? isModerator;

  @override
  final bool notificationsMuted;

  @override
  @EpochDateTimeConverter()
  final DateTime? pinnedAt;

  @override
  @JsonKey(unknownEnumValue: ChannelMemberRole.unknown)
  final ChannelMemberRole? role;

  @override
  final bool shadowBanned;

  @override
  final String? status;

  @override
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  @override
  final UserResponse? user;

  @override
  final String? userId;

  Map<String, dynamic> toJson() => _$ChannelMemberToJson(this);

  static ChannelMember fromJson(Map<String, dynamic> json) =>
      _$ChannelMemberFromJson(json);
}
