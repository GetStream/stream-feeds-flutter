// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'feed_input.g.dart';

@JsonEnum(alwaysCreate: true)
enum FeedInputVisibilityEnum {
  @JsonValue('followers')
  followers,
  @JsonValue('members')
  members,
  @JsonValue('private')
  private,
  @JsonValue('public')
  public,
  @JsonValue('visible')
  visible,
  unknown;
}

@immutable
@JsonSerializable()
class FeedInput {
  const FeedInput({
    this.custom,
    this.description,
    this.filterTags,
    this.members,
    this.name,
    this.visibility,
  });

  final Map<String, Object>? custom;

  final String? description;

  final List<String>? filterTags;

  final List<FeedMemberRequest>? members;

  final String? name;

  final FeedInputVisibilityEnum? visibility;

  Map<String, dynamic> toJson() => _$FeedInputToJson(this);

  static FeedInput fromJson(Map<String, dynamic> json) =>
      _$FeedInputFromJson(json);

  @override
  String toString() {
    return 'FeedInput('
        'custom: $custom, '
        'description: $description, '
        'filterTags: $filterTags, '
        'members: $members, '
        'name: $name, '
        'visibility: $visibility, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is FeedInput &&
        other.custom == custom &&
        other.description == description &&
        other.filterTags == filterTags &&
        other.members == members &&
        other.name == name &&
        other.visibility == visibility;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      custom,
      description,
      filterTags,
      members,
      name,
      visibility,
    ]);
  }
}
