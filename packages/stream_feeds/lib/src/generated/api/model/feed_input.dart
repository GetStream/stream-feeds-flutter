// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'feed_input.g.dart';
part 'feed_input.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum FeedInputVisibility {
  @JsonValue('followers')
  followers,
  @JsonValue('members')
  members,
  @JsonValue('private')
  private,
  @JsonValue('public')
  public,
  @JsonValue('visible')
  visible,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class FeedInput with _$FeedInput {
  const FeedInput({
    this.custom,
    this.description,
    this.filterTags,
    this.members,
    this.name,
    this.visibility,
  });

  @override
  final Map<String, Object?>? custom;

  @override
  final String? description;

  @override
  final List<String>? filterTags;

  @override
  final List<FeedMemberRequest>? members;

  @override
  final String? name;

  @override
  @JsonKey(unknownEnumValue: FeedInputVisibility.unknown)
  final FeedInputVisibility? visibility;

  Map<String, dynamic> toJson() => _$FeedInputToJson(this);

  static FeedInput fromJson(Map<String, dynamic> json) =>
      _$FeedInputFromJson(json);
}
