// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

enum FeedOwnCapability {
  addActivity('add-activity'),
  addActivityReaction('add-activity-reaction'),
  addComment('add-comment'),
  addCommentReaction('add-comment-reaction'),
  bookmarkActivity('bookmark-activity'),
  createFeed('create-feed'),
  deleteBookmark('delete-bookmark'),
  deleteComment('delete-comment'),
  deleteFeed('delete-feed'),
  editBookmark('edit-bookmark'),
  follow('follow'),
  inviteFeed('invite-feed'),
  joinFeed('join-feed'),
  leaveFeed('leave-feed'),
  manageFeedGroup('manage-feed-group'),
  markActivity('mark-activity'),
  pinActivity('pin-activity'),
  queryFeedMembers('query-feed-members'),
  queryFollows('query-follows'),
  readActivities('read-activities'),
  readFeed('read-feed'),
  removeActivity('remove-activity'),
  removeActivityReaction('remove-activity-reaction'),
  removeCommentReaction('remove-comment-reaction'),
  unfollow('unfollow'),
  updateActivity('update-activity'),
  updateComment('update-comment'),
  updateFeed('update-feed'),
  updateFeedFollowers('update-feed-followers'),
  updateFeedMembers('update-feed-members'),
  ;

  const FeedOwnCapability(this.value);
  final String value;

  static FeedOwnCapability fromJson(String json) {
    switch (json) {
      case 'add-activity':
        return FeedOwnCapability.addActivity;
      case 'add-activity-reaction':
        return FeedOwnCapability.addActivityReaction;
      case 'add-comment':
        return FeedOwnCapability.addComment;
      case 'add-comment-reaction':
        return FeedOwnCapability.addCommentReaction;
      case 'bookmark-activity':
        return FeedOwnCapability.bookmarkActivity;
      case 'create-feed':
        return FeedOwnCapability.createFeed;
      case 'delete-bookmark':
        return FeedOwnCapability.deleteBookmark;
      case 'delete-comment':
        return FeedOwnCapability.deleteComment;
      case 'delete-feed':
        return FeedOwnCapability.deleteFeed;
      case 'edit-bookmark':
        return FeedOwnCapability.editBookmark;
      case 'follow':
        return FeedOwnCapability.follow;
      case 'invite-feed':
        return FeedOwnCapability.inviteFeed;
      case 'join-feed':
        return FeedOwnCapability.joinFeed;
      case 'leave-feed':
        return FeedOwnCapability.leaveFeed;
      case 'manage-feed-group':
        return FeedOwnCapability.manageFeedGroup;
      case 'mark-activity':
        return FeedOwnCapability.markActivity;
      case 'pin-activity':
        return FeedOwnCapability.pinActivity;
      case 'query-feed-members':
        return FeedOwnCapability.queryFeedMembers;
      case 'query-follows':
        return FeedOwnCapability.queryFollows;
      case 'read-activities':
        return FeedOwnCapability.readActivities;
      case 'read-feed':
        return FeedOwnCapability.readFeed;
      case 'remove-activity':
        return FeedOwnCapability.removeActivity;
      case 'remove-activity-reaction':
        return FeedOwnCapability.removeActivityReaction;
      case 'remove-comment-reaction':
        return FeedOwnCapability.removeCommentReaction;
      case 'unfollow':
        return FeedOwnCapability.unfollow;
      case 'update-activity':
        return FeedOwnCapability.updateActivity;
      case 'update-comment':
        return FeedOwnCapability.updateComment;
      case 'update-feed':
        return FeedOwnCapability.updateFeed;
      case 'update-feed-followers':
        return FeedOwnCapability.updateFeedFollowers;
      case 'update-feed-members':
        return FeedOwnCapability.updateFeedMembers;

      default:
        throw ArgumentError('Unknown FeedOwnCapability value: $json');
    }
  }

  static List<FeedOwnCapability> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <FeedOwnCapability>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        result.add(FeedOwnCapability.fromJson(row));
      }
    }
    return result.toList(growable: growable);
  }

  String toJson() => value;

  @override
  String toString() => value;
}
