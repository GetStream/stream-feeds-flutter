// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class UnpinActivityResponse {
  const UnpinActivityResponse({
    required this.activity,
    required this.duration,
    required this.fid,
    required this.userId,
  });

  final ActivityResponse activity;

  final String duration;

  final String fid;

  final String userId;

  Map<String, dynamic> toJson() {
    return {
      'activity': activity,
      'duration': duration,
      'fid': fid,
      'user_id': userId,
    };
  }

  static UnpinActivityResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return UnpinActivityResponse(
        activity: ActivityResponse.fromJson(json[r'activity'])!,
        duration: mapValueOfType<String>(json, r'duration')!,
        fid: mapValueOfType<String>(json, r'fid')!,
        userId: mapValueOfType<String>(json, r'user_id')!,
      );
    }
    return null;
  }

  static List<UnpinActivityResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <UnpinActivityResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = UnpinActivityResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'UnpinActivityResponse('
        'activity: $activity, '
        'duration: $duration, '
        'fid: $fid, '
        'userId: $userId, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is UnpinActivityResponse &&
        other.activity == activity &&
        other.duration == duration &&
        other.fid == fid &&
        other.userId == userId;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      activity,
      duration,
      fid,
      userId,
    ]);
  }
}
