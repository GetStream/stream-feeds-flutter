// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'channel.g.dart';

@immutable
@JsonSerializable()
class Channel {
  const Channel({
    this.activeLiveLocations,
    this.autoTranslationEnabled,
    required this.autoTranslationLanguage,
    required this.cid,
    this.config,
    this.configOverrides,
    this.cooldown,
    required this.createdAt,
    this.createdBy,
    required this.custom,
    this.deletedAt,
    required this.disabled,
    required this.frozen,
    required this.id,
    this.invites,
    this.lastCampaigns,
    this.lastMessageAt,
    this.memberCount,
    this.members,
    this.team,
    this.truncatedBy,
    required this.type,
    required this.updatedAt,
  });

  final List<SharedLocation>? activeLiveLocations;

  final bool? autoTranslationEnabled;

  final String autoTranslationLanguage;

  final String cid;

  final ChannelConfig? config;

  final ConfigOverrides? configOverrides;

  final int? cooldown;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final User? createdBy;

  final Map<String, Object> custom;
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  final bool disabled;

  final bool frozen;

  final String id;

  final List<ChannelMember>? invites;

  final String? lastCampaigns;
  @EpochDateTimeConverter()
  final DateTime? lastMessageAt;

  final int? memberCount;

  final List<ChannelMember>? members;

  final String? team;

  final User? truncatedBy;

  final String type;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  Map<String, dynamic> toJson() => _$ChannelToJson(this);

  static Channel fromJson(Map<String, dynamic> json) => _$ChannelFromJson(json);

  @override
  String toString() {
    return 'Channel('
        'activeLiveLocations: $activeLiveLocations, '
        'autoTranslationEnabled: $autoTranslationEnabled, '
        'autoTranslationLanguage: $autoTranslationLanguage, '
        'cid: $cid, '
        'config: $config, '
        'configOverrides: $configOverrides, '
        'cooldown: $cooldown, '
        'createdAt: $createdAt, '
        'createdBy: $createdBy, '
        'custom: $custom, '
        'deletedAt: $deletedAt, '
        'disabled: $disabled, '
        'frozen: $frozen, '
        'id: $id, '
        'invites: $invites, '
        'lastCampaigns: $lastCampaigns, '
        'lastMessageAt: $lastMessageAt, '
        'memberCount: $memberCount, '
        'members: $members, '
        'team: $team, '
        'truncatedBy: $truncatedBy, '
        'type: $type, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Channel &&
        other.activeLiveLocations == activeLiveLocations &&
        other.autoTranslationEnabled == autoTranslationEnabled &&
        other.autoTranslationLanguage == autoTranslationLanguage &&
        other.cid == cid &&
        other.config == config &&
        other.configOverrides == configOverrides &&
        other.cooldown == cooldown &&
        other.createdAt == createdAt &&
        other.createdBy == createdBy &&
        other.custom == custom &&
        other.deletedAt == deletedAt &&
        other.disabled == disabled &&
        other.frozen == frozen &&
        other.id == id &&
        other.invites == invites &&
        other.lastCampaigns == lastCampaigns &&
        other.lastMessageAt == lastMessageAt &&
        other.memberCount == memberCount &&
        other.members == members &&
        other.team == team &&
        other.truncatedBy == truncatedBy &&
        other.type == type &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      activeLiveLocations,
      autoTranslationEnabled,
      autoTranslationLanguage,
      cid,
      config,
      configOverrides,
      cooldown,
      createdAt,
      createdBy,
      custom,
      deletedAt,
      disabled,
      frozen,
      id,
      invites,
      lastCampaigns,
      lastMessageAt,
      memberCount,
      members,
      team,
      truncatedBy,
      type,
      updatedAt,
    ]);
  }
}
