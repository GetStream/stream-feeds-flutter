// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'channel_response.g.dart';

@immutable
@JsonSerializable()
class ChannelResponse {
  const ChannelResponse({
    this.autoTranslationEnabled,
    this.autoTranslationLanguage,
    this.blocked,
    required this.cid,
    this.config,
    this.cooldown,
    required this.createdAt,
    this.createdBy,
    required this.custom,
    this.deletedAt,
    required this.disabled,
    required this.frozen,
    this.hidden,
    this.hideMessagesBefore,
    required this.id,
    this.lastMessageAt,
    this.memberCount,
    this.members,
    this.muteExpiresAt,
    this.muted,
    this.ownCapabilities,
    this.team,
    this.truncatedAt,
    this.truncatedBy,
    required this.type,
    required this.updatedAt,
  });

  final bool? autoTranslationEnabled;

  final String? autoTranslationLanguage;

  final bool? blocked;

  final String cid;

  final ChannelConfigWithInfo? config;

  final int? cooldown;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final UserResponse? createdBy;

  final Map<String, Object> custom;
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  final bool disabled;

  final bool frozen;

  final bool? hidden;
  @EpochDateTimeConverter()
  final DateTime? hideMessagesBefore;

  final String id;
  @EpochDateTimeConverter()
  final DateTime? lastMessageAt;

  final int? memberCount;

  final List<ChannelMember>? members;
  @EpochDateTimeConverter()
  final DateTime? muteExpiresAt;

  final bool? muted;

  final List<ChannelOwnCapability>? ownCapabilities;

  final String? team;
  @EpochDateTimeConverter()
  final DateTime? truncatedAt;

  final UserResponse? truncatedBy;

  final String type;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  Map<String, dynamic> toJson() => _$ChannelResponseToJson(this);

  static ChannelResponse fromJson(Map<String, dynamic> json) =>
      _$ChannelResponseFromJson(json);

  @override
  String toString() {
    return 'ChannelResponse('
        'autoTranslationEnabled: $autoTranslationEnabled, '
        'autoTranslationLanguage: $autoTranslationLanguage, '
        'blocked: $blocked, '
        'cid: $cid, '
        'config: $config, '
        'cooldown: $cooldown, '
        'createdAt: $createdAt, '
        'createdBy: $createdBy, '
        'custom: $custom, '
        'deletedAt: $deletedAt, '
        'disabled: $disabled, '
        'frozen: $frozen, '
        'hidden: $hidden, '
        'hideMessagesBefore: $hideMessagesBefore, '
        'id: $id, '
        'lastMessageAt: $lastMessageAt, '
        'memberCount: $memberCount, '
        'members: $members, '
        'muteExpiresAt: $muteExpiresAt, '
        'muted: $muted, '
        'ownCapabilities: $ownCapabilities, '
        'team: $team, '
        'truncatedAt: $truncatedAt, '
        'truncatedBy: $truncatedBy, '
        'type: $type, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ChannelResponse &&
        other.autoTranslationEnabled == autoTranslationEnabled &&
        other.autoTranslationLanguage == autoTranslationLanguage &&
        other.blocked == blocked &&
        other.cid == cid &&
        other.config == config &&
        other.cooldown == cooldown &&
        other.createdAt == createdAt &&
        other.createdBy == createdBy &&
        other.custom == custom &&
        other.deletedAt == deletedAt &&
        other.disabled == disabled &&
        other.frozen == frozen &&
        other.hidden == hidden &&
        other.hideMessagesBefore == hideMessagesBefore &&
        other.id == id &&
        other.lastMessageAt == lastMessageAt &&
        other.memberCount == memberCount &&
        other.members == members &&
        other.muteExpiresAt == muteExpiresAt &&
        other.muted == muted &&
        other.ownCapabilities == ownCapabilities &&
        other.team == team &&
        other.truncatedAt == truncatedAt &&
        other.truncatedBy == truncatedBy &&
        other.type == type &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      autoTranslationEnabled,
      autoTranslationLanguage,
      blocked,
      cid,
      config,
      cooldown,
      createdAt,
      createdBy,
      custom,
      deletedAt,
      disabled,
      frozen,
      hidden,
      hideMessagesBefore,
      id,
      lastMessageAt,
      memberCount,
      members,
      muteExpiresAt,
      muted,
      ownCapabilities,
      team,
      truncatedAt,
      truncatedBy,
      type,
      updatedAt,
    ]);
  }
}
