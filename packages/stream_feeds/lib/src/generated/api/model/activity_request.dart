// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'activity_request.g.dart';

@JsonEnum(alwaysCreate: true)
enum ActivityRequestVisibilityEnum {
  @JsonValue('private')
  private,
  @JsonValue('public')
  public,
  @JsonValue('tag')
  tag,
  unknown;
}

@immutable
@JsonSerializable()
class ActivityRequest {
  const ActivityRequest({
    this.attachments,
    this.custom,
    this.expiresAt,
    required this.fids,
    this.filterTags,
    this.id,
    this.interestTags,
    this.location,
    this.mentionedUserIds,
    this.parentId,
    this.pollId,
    this.searchData,
    this.text,
    required this.type,
    this.visibility,
    this.visibilityTag,
  });

  final List<Attachment>? attachments;

  final Map<String, Object>? custom;

  final String? expiresAt;

  final List<String> fids;

  final List<String>? filterTags;

  final String? id;

  final List<String>? interestTags;

  final ActivityLocation? location;

  final List<String>? mentionedUserIds;

  final String? parentId;

  final String? pollId;

  final Map<String, Object>? searchData;

  final String? text;

  final String type;

  final ActivityRequestVisibilityEnum? visibility;

  final String? visibilityTag;

  Map<String, dynamic> toJson() => _$ActivityRequestToJson(this);

  static ActivityRequest fromJson(Map<String, dynamic> json) =>
      _$ActivityRequestFromJson(json);

  @override
  String toString() {
    return 'ActivityRequest('
        'attachments: $attachments, '
        'custom: $custom, '
        'expiresAt: $expiresAt, '
        'fids: $fids, '
        'filterTags: $filterTags, '
        'id: $id, '
        'interestTags: $interestTags, '
        'location: $location, '
        'mentionedUserIds: $mentionedUserIds, '
        'parentId: $parentId, '
        'pollId: $pollId, '
        'searchData: $searchData, '
        'text: $text, '
        'type: $type, '
        'visibility: $visibility, '
        'visibilityTag: $visibilityTag, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ActivityRequest &&
        other.attachments == attachments &&
        other.custom == custom &&
        other.expiresAt == expiresAt &&
        other.fids == fids &&
        other.filterTags == filterTags &&
        other.id == id &&
        other.interestTags == interestTags &&
        other.location == location &&
        other.mentionedUserIds == mentionedUserIds &&
        other.parentId == parentId &&
        other.pollId == pollId &&
        other.searchData == searchData &&
        other.text == text &&
        other.type == type &&
        other.visibility == visibility &&
        other.visibilityTag == visibilityTag;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      attachments,
      custom,
      expiresAt,
      fids,
      filterTags,
      id,
      interestTags,
      location,
      mentionedUserIds,
      parentId,
      pollId,
      searchData,
      text,
      type,
      visibility,
      visibilityTag,
    ]);
  }
}
