// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'config_overrides.g.dart';
part 'config_overrides.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum ConfigOverridesBlocklistBehavior {
  @JsonValue('block')
  block,
  @JsonValue('flag')
  flag,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class ConfigOverrides with _$ConfigOverrides {
  const ConfigOverrides({
    this.blocklist,
    this.blocklistBehavior,
    required this.commands,
    this.countMessages,
    required this.grants,
    this.maxMessageLength,
    this.quotes,
    this.reactions,
    this.replies,
    this.sharedLocations,
    this.typingEvents,
    this.uploads,
    this.urlEnrichment,
    this.userMessageReminders,
  });

  @override
  final String? blocklist;

  @override
  @JsonKey(unknownEnumValue: ConfigOverridesBlocklistBehavior.unknown)
  final ConfigOverridesBlocklistBehavior? blocklistBehavior;

  @override
  final List<String> commands;

  @override
  final bool? countMessages;

  @override
  final Map<String, List<String>> grants;

  @override
  final int? maxMessageLength;

  @override
  final bool? quotes;

  @override
  final bool? reactions;

  @override
  final bool? replies;

  @override
  final bool? sharedLocations;

  @override
  final bool? typingEvents;

  @override
  final bool? uploads;

  @override
  final bool? urlEnrichment;

  @override
  final bool? userMessageReminders;

  Map<String, dynamic> toJson() => _$ConfigOverridesToJson(this);

  static ConfigOverrides fromJson(Map<String, dynamic> json) =>
      _$ConfigOverridesFromJson(json);
}
