// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'config_overrides.g.dart';

@JsonEnum(alwaysCreate: true)
enum ConfigOverridesBlocklistBehaviorEnum {
  @JsonValue('block')
  block,
  @JsonValue('flag')
  flag,
  unknown;
}

@immutable
@JsonSerializable()
class ConfigOverrides {
  const ConfigOverrides({
    this.blocklist,
    this.blocklistBehavior,
    required this.commands,
    required this.grants,
    this.maxMessageLength,
    this.quotes,
    this.reactions,
    this.replies,
    this.sharedLocations,
    this.typingEvents,
    this.uploads,
    this.urlEnrichment,
    this.userMessageReminders,
  });

  final String? blocklist;

  final ConfigOverridesBlocklistBehaviorEnum? blocklistBehavior;

  final List<String> commands;

  final Map<String, List<String>> grants;

  final int? maxMessageLength;

  final bool? quotes;

  final bool? reactions;

  final bool? replies;

  final bool? sharedLocations;

  final bool? typingEvents;

  final bool? uploads;

  final bool? urlEnrichment;

  final bool? userMessageReminders;

  Map<String, dynamic> toJson() => _$ConfigOverridesToJson(this);

  static ConfigOverrides fromJson(Map<String, dynamic> json) =>
      _$ConfigOverridesFromJson(json);

  @override
  String toString() {
    return 'ConfigOverrides('
        'blocklist: $blocklist, '
        'blocklistBehavior: $blocklistBehavior, '
        'commands: $commands, '
        'grants: $grants, '
        'maxMessageLength: $maxMessageLength, '
        'quotes: $quotes, '
        'reactions: $reactions, '
        'replies: $replies, '
        'sharedLocations: $sharedLocations, '
        'typingEvents: $typingEvents, '
        'uploads: $uploads, '
        'urlEnrichment: $urlEnrichment, '
        'userMessageReminders: $userMessageReminders, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ConfigOverrides &&
        other.blocklist == blocklist &&
        other.blocklistBehavior == blocklistBehavior &&
        other.commands == commands &&
        other.grants == grants &&
        other.maxMessageLength == maxMessageLength &&
        other.quotes == quotes &&
        other.reactions == reactions &&
        other.replies == replies &&
        other.sharedLocations == sharedLocations &&
        other.typingEvents == typingEvents &&
        other.uploads == uploads &&
        other.urlEnrichment == urlEnrichment &&
        other.userMessageReminders == userMessageReminders;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      blocklist,
      blocklistBehavior,
      commands,
      grants,
      maxMessageLength,
      quotes,
      reactions,
      replies,
      sharedLocations,
      typingEvents,
      uploads,
      urlEnrichment,
      userMessageReminders,
    ]);
  }
}
