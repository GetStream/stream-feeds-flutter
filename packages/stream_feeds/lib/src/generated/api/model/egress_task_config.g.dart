// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class EgressTaskConfig {
  const EgressTaskConfig({
    this.egressUser,
    this.frameRecordingEgressConfig,
    this.hlsEgressConfig,
    this.recordingEgressConfig,
    this.rtmpEgressConfig,
    this.sttEgressConfig,
  });

  final EgressUser? egressUser;

  final FrameRecordingEgressConfig? frameRecordingEgressConfig;

  final HLSEgressConfig? hlsEgressConfig;

  final RecordingEgressConfig? recordingEgressConfig;

  final RTMPEgressConfig? rtmpEgressConfig;

  final STTEgressConfig? sttEgressConfig;

  Map<String, dynamic> toJson() {
    return {
      'egress_user': egressUser,
      'frame_recording_egress_config': frameRecordingEgressConfig,
      'hls_egress_config': hlsEgressConfig,
      'recording_egress_config': recordingEgressConfig,
      'rtmp_egress_config': rtmpEgressConfig,
      'stt_egress_config': sttEgressConfig,
    };
  }

  static EgressTaskConfig? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return EgressTaskConfig(
        egressUser: EgressUser.fromJson(json[r'egress_user'] ?? null),
        frameRecordingEgressConfig: FrameRecordingEgressConfig.fromJson(
            json[r'frame_recording_egress_config'] ?? null),
        hlsEgressConfig:
            HLSEgressConfig.fromJson(json[r'hls_egress_config'] ?? null),
        recordingEgressConfig: RecordingEgressConfig.fromJson(
            json[r'recording_egress_config'] ?? null),
        rtmpEgressConfig:
            RTMPEgressConfig.fromJson(json[r'rtmp_egress_config'] ?? null),
        sttEgressConfig:
            STTEgressConfig.fromJson(json[r'stt_egress_config'] ?? null),
      );
    }
    return null;
  }

  static List<EgressTaskConfig> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <EgressTaskConfig>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = EgressTaskConfig.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'EgressTaskConfig('
        'egressUser: $egressUser, '
        'frameRecordingEgressConfig: $frameRecordingEgressConfig, '
        'hlsEgressConfig: $hlsEgressConfig, '
        'recordingEgressConfig: $recordingEgressConfig, '
        'rtmpEgressConfig: $rtmpEgressConfig, '
        'sttEgressConfig: $sttEgressConfig, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is EgressTaskConfig &&
        other.egressUser == egressUser &&
        other.frameRecordingEgressConfig == frameRecordingEgressConfig &&
        other.hlsEgressConfig == hlsEgressConfig &&
        other.recordingEgressConfig == recordingEgressConfig &&
        other.rtmpEgressConfig == rtmpEgressConfig &&
        other.sttEgressConfig == sttEgressConfig;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      egressUser,
      frameRecordingEgressConfig,
      hlsEgressConfig,
      recordingEgressConfig,
      rtmpEgressConfig,
      sttEgressConfig,
    ]);
  }
}
