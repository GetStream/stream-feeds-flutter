// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'file_upload_config.g.dart';

@immutable
@JsonSerializable()
class FileUploadConfig {
  const FileUploadConfig({
    required this.allowedFileExtensions,
    required this.allowedMimeTypes,
    required this.blockedFileExtensions,
    required this.blockedMimeTypes,
    required this.sizeLimit,
  });

  final List<String> allowedFileExtensions;

  final List<String> allowedMimeTypes;

  final List<String> blockedFileExtensions;

  final List<String> blockedMimeTypes;

  final int sizeLimit;

  Map<String, dynamic> toJson() => _$FileUploadConfigToJson(this);

  static FileUploadConfig fromJson(Map<String, dynamic> json) =>
      _$FileUploadConfigFromJson(json);

  @override
  String toString() {
    return 'FileUploadConfig('
        'allowedFileExtensions: $allowedFileExtensions, '
        'allowedMimeTypes: $allowedMimeTypes, '
        'blockedFileExtensions: $blockedFileExtensions, '
        'blockedMimeTypes: $blockedMimeTypes, '
        'sizeLimit: $sizeLimit, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is FileUploadConfig &&
        other.allowedFileExtensions == allowedFileExtensions &&
        other.allowedMimeTypes == allowedMimeTypes &&
        other.blockedFileExtensions == blockedFileExtensions &&
        other.blockedMimeTypes == blockedMimeTypes &&
        other.sizeLimit == sizeLimit;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      allowedFileExtensions,
      allowedMimeTypes,
      blockedFileExtensions,
      blockedMimeTypes,
      sizeLimit,
    ]);
  }
}
