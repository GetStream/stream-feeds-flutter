// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'image_size.g.dart';

@JsonEnum(alwaysCreate: true)
enum ImageSizeCropEnum {
  @JsonValue('bottom')
  bottom,
  @JsonValue('center')
  center,
  @JsonValue('left')
  left,
  @JsonValue('right')
  right,
  @JsonValue('top')
  top,
  unknown;
}

@JsonEnum(alwaysCreate: true)
enum ImageSizeResizeEnum {
  @JsonValue('clip')
  clip,
  @JsonValue('crop')
  crop,
  @JsonValue('fill')
  fill,
  @JsonValue('scale')
  scale,
  unknown;
}

@immutable
@JsonSerializable()
class ImageSize {
  const ImageSize({
    this.crop,
    this.height,
    this.resize,
    this.width,
  });

  final ImageSizeCropEnum? crop;

  final int? height;

  final ImageSizeResizeEnum? resize;

  final int? width;

  Map<String, dynamic> toJson() => _$ImageSizeToJson(this);

  static ImageSize fromJson(Map<String, dynamic> json) =>
      _$ImageSizeFromJson(json);

  @override
  String toString() {
    return 'ImageSize('
        'crop: $crop, '
        'height: $height, '
        'resize: $resize, '
        'width: $width, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is ImageSize &&
        other.crop == crop &&
        other.height == height &&
        other.resize == resize &&
        other.width == width;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      crop,
      height,
      resize,
      width,
    ]);
  }
}
