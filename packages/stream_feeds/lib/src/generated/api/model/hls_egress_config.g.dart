// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class HLSEgressConfig {
  const HLSEgressConfig({
    this.compositeAppSettings,
    this.playlistUrl,
    this.qualities,
    this.startUnixNano,
  });

  final CompositeAppSettings? compositeAppSettings;

  final String? playlistUrl;

  final List<Quality>? qualities;

  final int? startUnixNano;

  Map<String, dynamic> toJson() {
    return {
      'composite_app_settings': compositeAppSettings,
      'playlist_url': playlistUrl,
      'qualities': qualities,
      'start_unix_nano': startUnixNano,
    };
  }

  static HLSEgressConfig? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return HLSEgressConfig(
        compositeAppSettings: CompositeAppSettings.fromJson(
            json[r'composite_app_settings'] ?? null),
        playlistUrl: mapValueOfType<String>(json, r'playlist_url', null),
        qualities: Quality.listFromJson(json[r'qualities']),
        startUnixNano: mapValueOfType<int>(json, r'start_unix_nano', null),
      );
    }
    return null;
  }

  static List<HLSEgressConfig> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <HLSEgressConfig>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = HLSEgressConfig.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'HLSEgressConfig('
        'compositeAppSettings: $compositeAppSettings, '
        'playlistUrl: $playlistUrl, '
        'qualities: $qualities, '
        'startUnixNano: $startUnixNano, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is HLSEgressConfig &&
        other.compositeAppSettings == compositeAppSettings &&
        other.playlistUrl == playlistUrl &&
        other.qualities == qualities &&
        other.startUnixNano == startUnixNano;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      compositeAppSettings,
      playlistUrl,
      qualities,
      startUnixNano,
    ]);
  }
}
