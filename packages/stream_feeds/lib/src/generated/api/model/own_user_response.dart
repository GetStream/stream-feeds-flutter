// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'own_user_response.g.dart';

@immutable
@JsonSerializable()
class OwnUserResponse {
  const OwnUserResponse({
    this.avgResponseTime,
    required this.banned,
    this.blockedUserIds,
    required this.channelMutes,
    required this.createdAt,
    required this.custom,
    this.deactivatedAt,
    this.deletedAt,
    required this.devices,
    required this.id,
    this.image,
    required this.invisible,
    required this.language,
    this.lastActive,
    this.latestHiddenChannels,
    required this.mutes,
    this.name,
    required this.online,
    this.privacySettings,
    this.pushPreferences,
    this.revokeTokensIssuedBefore,
    required this.role,
    required this.teams,
    this.teamsRole,
    required this.totalUnreadCount,
    this.totalUnreadCountByTeam,
    required this.unreadChannels,
    required this.unreadCount,
    required this.unreadThreads,
    required this.updatedAt,
  });

  final int? avgResponseTime;

  final bool banned;

  final List<String>? blockedUserIds;

  final List<ChannelMute> channelMutes;
  @EpochDateTimeConverter()
  final DateTime createdAt;

  final Map<String, Object> custom;
  @EpochDateTimeConverter()
  final DateTime? deactivatedAt;
  @EpochDateTimeConverter()
  final DateTime? deletedAt;

  final List<DeviceResponse> devices;

  final String id;

  final String? image;

  final bool invisible;

  final String language;
  @EpochDateTimeConverter()
  final DateTime? lastActive;

  final List<String>? latestHiddenChannels;

  final List<UserMuteResponse> mutes;

  final String? name;

  final bool online;

  final PrivacySettingsResponse? privacySettings;

  final PushPreferences? pushPreferences;
  @EpochDateTimeConverter()
  final DateTime? revokeTokensIssuedBefore;

  final String role;

  final List<String> teams;

  final Map<String, String>? teamsRole;

  final int totalUnreadCount;

  final Map<String, int>? totalUnreadCountByTeam;

  final int unreadChannels;

  final int unreadCount;

  final int unreadThreads;
  @EpochDateTimeConverter()
  final DateTime updatedAt;

  Map<String, dynamic> toJson() => _$OwnUserResponseToJson(this);

  static OwnUserResponse fromJson(Map<String, dynamic> json) =>
      _$OwnUserResponseFromJson(json);

  @override
  String toString() {
    return 'OwnUserResponse('
        'avgResponseTime: $avgResponseTime, '
        'banned: $banned, '
        'blockedUserIds: $blockedUserIds, '
        'channelMutes: $channelMutes, '
        'createdAt: $createdAt, '
        'custom: $custom, '
        'deactivatedAt: $deactivatedAt, '
        'deletedAt: $deletedAt, '
        'devices: $devices, '
        'id: $id, '
        'image: $image, '
        'invisible: $invisible, '
        'language: $language, '
        'lastActive: $lastActive, '
        'latestHiddenChannels: $latestHiddenChannels, '
        'mutes: $mutes, '
        'name: $name, '
        'online: $online, '
        'privacySettings: $privacySettings, '
        'pushPreferences: $pushPreferences, '
        'revokeTokensIssuedBefore: $revokeTokensIssuedBefore, '
        'role: $role, '
        'teams: $teams, '
        'teamsRole: $teamsRole, '
        'totalUnreadCount: $totalUnreadCount, '
        'totalUnreadCountByTeam: $totalUnreadCountByTeam, '
        'unreadChannels: $unreadChannels, '
        'unreadCount: $unreadCount, '
        'unreadThreads: $unreadThreads, '
        'updatedAt: $updatedAt, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is OwnUserResponse &&
        other.avgResponseTime == avgResponseTime &&
        other.banned == banned &&
        other.blockedUserIds == blockedUserIds &&
        other.channelMutes == channelMutes &&
        other.createdAt == createdAt &&
        other.custom == custom &&
        other.deactivatedAt == deactivatedAt &&
        other.deletedAt == deletedAt &&
        other.devices == devices &&
        other.id == id &&
        other.image == image &&
        other.invisible == invisible &&
        other.language == language &&
        other.lastActive == lastActive &&
        other.latestHiddenChannels == latestHiddenChannels &&
        other.mutes == mutes &&
        other.name == name &&
        other.online == online &&
        other.privacySettings == privacySettings &&
        other.pushPreferences == pushPreferences &&
        other.revokeTokensIssuedBefore == revokeTokensIssuedBefore &&
        other.role == role &&
        other.teams == teams &&
        other.teamsRole == teamsRole &&
        other.totalUnreadCount == totalUnreadCount &&
        other.totalUnreadCountByTeam == totalUnreadCountByTeam &&
        other.unreadChannels == unreadChannels &&
        other.unreadCount == unreadCount &&
        other.unreadThreads == unreadThreads &&
        other.updatedAt == updatedAt;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      avgResponseTime,
      banned,
      blockedUserIds,
      channelMutes,
      createdAt,
      custom,
      deactivatedAt,
      deletedAt,
      devices,
      id,
      image,
      invisible,
      language,
      lastActive,
      latestHiddenChannels,
      mutes,
      name,
      online,
      privacySettings,
      pushPreferences,
      revokeTokensIssuedBefore,
      role,
      teams,
      teamsRole,
      totalUnreadCount,
      totalUnreadCountByTeam,
      unreadChannels,
      unreadCount,
      unreadThreads,
      updatedAt,
    ]);
  }
}
