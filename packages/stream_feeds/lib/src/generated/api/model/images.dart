// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: unused_import

import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import '../models.dart';

part 'images.g.dart';

@immutable
@JsonSerializable()
class Images {
  const Images({
    required this.fixedHeight,
    required this.fixedHeightDownsampled,
    required this.fixedHeightStill,
    required this.fixedWidth,
    required this.fixedWidthDownsampled,
    required this.fixedWidthStill,
    required this.original,
  });

  final ImageData fixedHeight;

  final ImageData fixedHeightDownsampled;

  final ImageData fixedHeightStill;

  final ImageData fixedWidth;

  final ImageData fixedWidthDownsampled;

  final ImageData fixedWidthStill;

  final ImageData original;

  Map<String, dynamic> toJson() => _$ImagesToJson(this);

  static Images fromJson(Map<String, dynamic> json) => _$ImagesFromJson(json);

  @override
  String toString() {
    return 'Images('
        'fixedHeight: $fixedHeight, '
        'fixedHeightDownsampled: $fixedHeightDownsampled, '
        'fixedHeightStill: $fixedHeightStill, '
        'fixedWidth: $fixedWidth, '
        'fixedWidthDownsampled: $fixedWidthDownsampled, '
        'fixedWidthStill: $fixedWidthStill, '
        'original: $original, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is Images &&
        other.fixedHeight == fixedHeight &&
        other.fixedHeightDownsampled == fixedHeightDownsampled &&
        other.fixedHeightStill == fixedHeightStill &&
        other.fixedWidth == fixedWidth &&
        other.fixedWidthDownsampled == fixedWidthDownsampled &&
        other.fixedWidthStill == fixedWidthStill &&
        other.original == original;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      fixedHeight,
      fixedHeightDownsampled,
      fixedHeightStill,
      fixedWidth,
      fixedWidthDownsampled,
      fixedWidthStill,
      original,
    ]);
  }
}
