// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'ban_action_request.g.dart';
part 'ban_action_request.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum BanActionRequestDeleteMessages {
  @JsonValue('hard')
  hard,
  @JsonValue('pruning')
  pruning,
  @JsonValue('soft')
  soft,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class BanActionRequest with _$BanActionRequest {
  const BanActionRequest({
    this.channelBanOnly,
    this.deleteMessages,
    this.ipBan,
    this.reason,
    this.shadow,
    this.timeout,
  });

  @override
  final bool? channelBanOnly;

  @override
  @JsonKey(unknownEnumValue: BanActionRequestDeleteMessages.unknown)
  final BanActionRequestDeleteMessages? deleteMessages;

  @override
  final bool? ipBan;

  @override
  final String? reason;

  @override
  final bool? shadow;

  @override
  final int? timeout;

  Map<String, dynamic> toJson() => _$BanActionRequestToJson(this);

  static BanActionRequest fromJson(Map<String, dynamic> json) =>
      _$BanActionRequestFromJson(json);
}
