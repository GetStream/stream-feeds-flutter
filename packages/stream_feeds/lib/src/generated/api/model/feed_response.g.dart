// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: use_string_in_part_of_directives
// ignore_for_file: unnecessary_raw_strings
// ignore_for_file: unnecessary_null_in_if_null_operators
// ignore_for_file: public_member_api_docs
// ignore_for_file: prefer_single_quotes
// ignore_for_file: require_trailing_commas

part of openapi.api;

@immutable
class FeedResponse {
  const FeedResponse({
    required this.createdAt,
    required this.createdBy,
    this.custom,
    this.deletedAt,
    required this.description,
    required this.fid,
    this.filterTags,
    required this.followerCount,
    required this.followingCount,
    required this.groupId,
    required this.id,
    required this.memberCount,
    required this.name,
    required this.pinCount,
    required this.updatedAt,
    this.visibility,
  });

  final DateTime createdAt;

  final UserResponse createdBy;

  final Map<String, Object>? custom;

  final DateTime? deletedAt;

  final String description;

  final String fid;

  final List<String>? filterTags;

  final int followerCount;

  final int followingCount;

  final String groupId;

  final String id;

  final int memberCount;

  final String name;

  final int pinCount;

  final DateTime updatedAt;

  final String? visibility;

  Map<String, dynamic> toJson() {
    return {
      'created_at': createdAt,
      'created_by': createdBy,
      'custom': custom,
      'deleted_at': deletedAt,
      'description': description,
      'fid': fid,
      'filter_tags': filterTags,
      'follower_count': followerCount,
      'following_count': followingCount,
      'group_id': groupId,
      'id': id,
      'member_count': memberCount,
      'name': name,
      'pin_count': pinCount,
      'updated_at': updatedAt,
      'visibility': visibility,
    };
  }

  static FeedResponse? fromJson(dynamic value) {
    if (value is Map) {
      final json = value.cast<String, dynamic>();

      return FeedResponse(
        createdAt: mapValueOfType<DateTime>(json, r'created_at')!,
        createdBy: UserResponse.fromJson(json[r'created_by'])!,
        custom: mapCastOfType<String, Object>(json, r'custom'),
        deletedAt: mapValueOfType<DateTime>(json, r'deleted_at', null),
        description: mapValueOfType<String>(json, r'description')!,
        fid: mapValueOfType<String>(json, r'fid')!,
        filterTags: json[r'filter_tags'] is Iterable
            ? (json[r'filter_tags'] as Iterable)
                .cast<String>()
                .toList(growable: false)
            : const [],
        followerCount: mapValueOfType<int>(json, r'follower_count')!,
        followingCount: mapValueOfType<int>(json, r'following_count')!,
        groupId: mapValueOfType<String>(json, r'group_id')!,
        id: mapValueOfType<String>(json, r'id')!,
        memberCount: mapValueOfType<int>(json, r'member_count')!,
        name: mapValueOfType<String>(json, r'name')!,
        pinCount: mapValueOfType<int>(json, r'pin_count')!,
        updatedAt: mapValueOfType<DateTime>(json, r'updated_at')!,
        visibility: mapValueOfType<String>(json, r'visibility', null),
      );
    }
    return null;
  }

  static List<FeedResponse> listFromJson(
    dynamic json, {
    bool growable = false,
  }) {
    final result = <FeedResponse>[];
    if (json is List && json.isNotEmpty) {
      for (final row in json) {
        final value = FeedResponse.fromJson(row);
        if (value != null) {
          result.add(value);
        }
      }
    }
    return result.toList(growable: growable);
  }

  @override
  String toString() {
    return 'FeedResponse('
        'createdAt: $createdAt, '
        'createdBy: $createdBy, '
        'custom: $custom, '
        'deletedAt: $deletedAt, '
        'description: $description, '
        'fid: $fid, '
        'filterTags: $filterTags, '
        'followerCount: $followerCount, '
        'followingCount: $followingCount, '
        'groupId: $groupId, '
        'id: $id, '
        'memberCount: $memberCount, '
        'name: $name, '
        'pinCount: $pinCount, '
        'updatedAt: $updatedAt, '
        'visibility: $visibility, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is FeedResponse &&
        other.createdAt == createdAt &&
        other.createdBy == createdBy &&
        other.custom == custom &&
        other.deletedAt == deletedAt &&
        other.description == description &&
        other.fid == fid &&
        other.filterTags == filterTags &&
        other.followerCount == followerCount &&
        other.followingCount == followingCount &&
        other.groupId == groupId &&
        other.id == id &&
        other.memberCount == memberCount &&
        other.name == name &&
        other.pinCount == pinCount &&
        other.updatedAt == updatedAt &&
        other.visibility == visibility;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      createdAt,
      createdBy,
      custom,
      deletedAt,
      description,
      fid,
      filterTags,
      followerCount,
      followingCount,
      groupId,
      id,
      memberCount,
      name,
      pinCount,
      updatedAt,
      visibility,
    ]);
  }
}
