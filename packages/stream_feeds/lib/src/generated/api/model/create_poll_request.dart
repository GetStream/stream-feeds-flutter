// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

// coverage:ignore-file
// ignore_for_file: unused_import, unnecessary_import, prefer_single_quotes, require_trailing_commas, unnecessary_raw_strings, public_member_api_docs

import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:stream_core/stream_core.dart' as core;

import '../models.dart';

part 'create_poll_request.g.dart';
part 'create_poll_request.freezed.dart';

@JsonEnum(alwaysCreate: true)
enum CreatePollRequestVotingVisibility {
  @JsonValue('anonymous')
  anonymous,
  @JsonValue('public')
  public,
  @JsonValue('_unknown')
  unknown;
}

@freezed
@immutable
@JsonSerializable()
class CreatePollRequest with _$CreatePollRequest {
  const CreatePollRequest({
    this.allowAnswers,
    this.allowUserSuggestedOptions,
    this.custom,
    this.description,
    this.enforceUniqueVote,
    this.id,
    this.isClosed,
    this.maxVotesAllowed,
    required this.name,
    this.options,
    this.votingVisibility,
  });

  @override
  final bool? allowAnswers;

  @override
  final bool? allowUserSuggestedOptions;

  @override
  final Map<String, Object>? custom;

  @override
  final String? description;

  @override
  final bool? enforceUniqueVote;

  @override
  final String? id;

  @override
  final bool? isClosed;

  @override
  final int? maxVotesAllowed;

  @override
  final String name;

  @override
  final List<PollOptionInput>? options;

  @override
  @JsonKey(unknownEnumValue: CreatePollRequestVotingVisibility.unknown)
  final CreatePollRequestVotingVisibility? votingVisibility;

  Map<String, dynamic> toJson() => _$CreatePollRequestToJson(this);

  static CreatePollRequest fromJson(Map<String, dynamic> json) =>
      _$CreatePollRequestFromJson(json);
}
