// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.

import 'package:json_annotation/json_annotation.dart';
import '../models.dart';

part 'add_comment_request.g.dart';

@JsonSerializable()
class AddCommentRequest {
  const AddCommentRequest({
    this.attachments,
    required this.comment,
    this.createNotificationActivity,
    this.custom,
    this.mentionedUserIds,
    required this.objectId,
    required this.objectType,
    this.parentId,
  });

  final List<Attachment>? attachments;

  final String comment;

  final bool? createNotificationActivity;

  final Map<String, Object>? custom;

  final List<String>? mentionedUserIds;

  final String objectId;

  final String objectType;

  final String? parentId;

  Map<String, dynamic> toJson() => _$AddCommentRequestToJson(this);

  static AddCommentRequest fromJson(Map<String, dynamic> json) =>
      _$AddCommentRequestFromJson(json);

  @override
  String toString() {
    return 'AddCommentRequest('
        'attachments: $attachments, '
        'comment: $comment, '
        'createNotificationActivity: $createNotificationActivity, '
        'custom: $custom, '
        'mentionedUserIds: $mentionedUserIds, '
        'objectId: $objectId, '
        'objectType: $objectType, '
        'parentId: $parentId, '
        ')';
  }

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    return other is AddCommentRequest &&
        other.attachments == attachments &&
        other.comment == comment &&
        other.createNotificationActivity == createNotificationActivity &&
        other.custom == custom &&
        other.mentionedUserIds == mentionedUserIds &&
        other.objectId == objectId &&
        other.objectType == objectType &&
        other.parentId == parentId;
  }

  @override
  int get hashCode {
    return Object.hashAll([
      attachments,
      comment,
      createNotificationActivity,
      custom,
      mentionedUserIds,
      objectId,
      objectType,
      parentId,
    ]);
  }
}
